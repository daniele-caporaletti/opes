volumes:
  kc_db_data:
  kc_data:
  mysql_data:

services:

  postgres-keycloak:
    image: ${PG_IMAGE}
    container_name: kc-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
      TZ: ${TZ}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - kc_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 3s
      retries: 30

  keycloak:
    image: ${KC_IMAGE}
    container_name: keycloak
    restart: unless-stopped
    depends_on:
      postgres-keycloak:
        condition: service_healthy
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_ADMIN_PW}
      # DB
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/${PG_DB}
      KC_DB_USERNAME: ${PG_USER}
      KC_DB_PASSWORD: ${PG_PASSWORD}
      # Management interface
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
    command:
      - start-dev
      - --import-realm # solo al primo avvio se monti un realm
    ports:
      - "8081:8080"   # Keycloak (HTTP)
      - "9000:9000"   # Management: /health, /metrics
    volumes:
      # importa il/ i realm all'avvio
      - ./autenticazione/realm:/opt/keycloak/data/import
      # temi custom
      - ./autenticazione/themes:/opt/keycloak/providers/
      # dati server (per import gi√† processati, ecc.)
      - kc_data:/opt/keycloak/data
    healthcheck:
      test: ["CMD", "bash", "-c", "curl -fsS http://localhost:9000/health/ready || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30

  bff:
    build:
      context: ./autenticazione/bff
      dockerfile: Dockerfile
    container_name: bff
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      BFF_CLIENT_SECRET: ${BFF_CLIENT_SECRET}
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/opes
    ports:
      - "9090:8080"        # host:container
    command: ["java", "-jar", "/app/app.jar"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://keycloak:9000/actuator/health/readiness | grep -q '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 3s
      retries: 30

  mysql:
    image: ${MYSQL_IMAGE}
    container_name: mysql-opex
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: opexdb           # Nome del database
      MYSQL_USER: ${MYSQL_USER}                   # Utente del database
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}           # Password utente
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Password di root
      TZ: ${TZ}
    volumes:
      - mysql_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost --silent"]
      interval: 10s
      timeout: 5s
      retries: 10



